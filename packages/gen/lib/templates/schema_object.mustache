{{#imports}}
import '{{{.}}}';
{{/imports}}

class {{ schemaName }} {
    {{ schemaName }}(
        {{#hasProperties}}{ {{/hasProperties}}
        {{#properties}}
        required this.{{ propertyName }},
        {{/properties}}
        {{#hasProperties}} }{{/hasProperties}}
        {{#hasAdditionalProperties}}
        {
        required this.additionalProperties,
        }
        {{/hasAdditionalProperties}}
    );

    factory {{ schemaName }}.fromJson(Map<String, dynamic> json) {
        return {{ schemaName }}(
            {{#properties}}
            {{ propertyName }}: {{{ propertyFromJson }}},
            {{/properties}}
            {{#hasAdditionalProperties}}
            additionalProperties: json.map((key, value) => MapEntry(key, {{{ valueFromJson }}})),
            {{/hasAdditionalProperties}}
        );
    }

    {{#properties}}
    final {{{ propertyType }}} {{ propertyName }};
    {{/properties}}

    {{#hasAdditionalProperties}}
    final Map<String, {{{ valueSchema }}}> additionalProperties;

    {{{ valueSchema }}}? operator [](String key) => additionalProperties[key];
    {{/hasAdditionalProperties}}

    Map<String, dynamic> toJson() {
        return {
            {{#properties}}
            '{{ propertyName }}': {{{ propertyToJson }}},
            {{/properties}}
            {{#hasAdditionalProperties}}
            ...additionalProperties.map((key, value) => MapEntry(key, {{{ valueToJson }}})),
            {{/hasAdditionalProperties}}
        };
    }
}
