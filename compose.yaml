# cspell:words initdb healthcheck pg_isready
services:
  web:
    build:
      context: ./packages
      dockerfile: ./ui/Dockerfile-dev
    volumes:
      # Only needed for development.
      - ./packages/ui/build/web:/usr/share/nginx/html
    ports:
      # This should just expose 80, but doesn't seem to work?
      - "8080:80"
    depends_on:
      server:
        condition: service_started
  server:
    build:
      context: ./packages
      dockerfile: ./server/Dockerfile
    # Web is our only public front-end, so use only expose rather than ports.
    expose:
      - "8080"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    volumes:
      - ./packages/cli/static_data:/static_data
      - ./packages/cli/data:/data
  net:
    build:
      context: ./packages
      dockerfile: ./cli/Dockerfile
      args:
        - BIN=network_execute
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
  cli:
    build:
      context: ./packages
      dockerfile: ./cli/Dockerfile
      args:
        - BIN=cli
    environment:
      - ST_AGENT=${ST_AGENT}
      - ST_EMAIL=${ST_EMAIL}
      - ST_FACTION=${ST_FACTION}
    depends_on:
      net:
        condition: service_started
      db:
        condition: service_healthy
    restart: on-failure
    # TODO(eseidel): Either remove these volumes entirely, or only use them
    # from the server container.
    volumes:
      - ./packages/cli/static_data:/static_data
      - ./packages/cli/data:/data
  idle:
    build:
      context: ./packages
      dockerfile: ./cli/Dockerfile
      args:
        - BIN=idle_queue
    depends_on:
      net:
        condition: service_started
      db:
        condition: service_healthy
    restart: on-failure
    # TODO(eseidel): Either remove these volumes entirely, or only use them
    # from the server container.
    volumes:
      - ./packages/cli/static_data:/static_data
      - ./packages/cli/data:/data
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=spacetraders
    # Expose the port to other containers.
    expose: [5432]
    # Carefully *only* expose the port to localhost (for test scripts).
    ports: ["127.0.0.1:5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./packages/db/sql/tables:/docker-entrypoint-initdb.d/
